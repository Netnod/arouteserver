{% from 'macros.j2' import write_prefix_list %}
{% from 'macros.j2' import write_prefix_list_entry %}
{% from 'macros.j2' import write_prefixset_list %}
{% from 'macros.j2' import write_community %}
# ---------------------------------------------------------
# FILTERS

policy-definitions:
  - name: default-export
    statements:
      - conditions:
          match-prefix-set:
            prefix-set: "generic-martians"
            match-set-options: "any"
        actions:
          route-disposition : "reject-route"
      - conditions:
          bgp-conditions:
            match-community-set:
              community-set: accept-route-for-as-community
        actions:
          route-disposition: accept-route
      - conditions:
          bgp-conditions:
            match-community-set:
              community-set: generic-reject
        actions:
          route-disposition: reject-route

  - name: default-import
    statements:
      - conditions:
          match-prefix-set:
            prefix-set: "generic-martians"
            match-set-options: "any"
        actions:
          route-disposition : "reject-route"

{% for asn in clients|map(attribute='asn')|unique|list %}
  - name: as{{ asn }}-import
    statements:
      - conditions:
          bgp-conditions:
            match-as-path-set:
              as-path-set: "as{{ asn }}-first"
              match-set-options: invert
        actions:
          route-disposition: "reject-route"

      ## Communities 
      {% if community_is_set("prepend_once_to_any","lrg") %}
      - conditions:
          bgp-conditions:
            match-large-community-set:
              large-community-set: prepend-large-1x-as{{asn}}
        actions:
          bgp-actions:
            set-as-path-prepend:
              as: last-as
              repeat-n: 1
      {% endif %}
      {% if community_is_set("prepend_twice_to_any","lrg") %}
      - conditions:
          bgp-conditions:
            match-large-community-set:
              large-community-set: prepend-large-2x-as{{asn}}
        actions:
          bgp-actions:
            set-as-path-prepend:
              as: last-as
              repeat-n: 2
      {% endif %}
      {% if community_is_set("prepend_thrice_to_any","lrg") %}
      - conditions:
          bgp-conditions:
            match-large-community-set:
              large-community-set: prepend-large-3x-as{{asn}}
        actions:
          bgp-actions:
            set-as-path-prepend:
              as: last-as
              repeat-n: 3
      {% endif %}
  - name: as{{ asn }}-export
    statements:
    {% if community_is_set("announce_to_peer","std") %}
      - conditions:
          bgp-conditions:
            match-community-set:
              community-set: announce_to_peer_as{{asn}}
        actions:
          route-disposition: accept-route
    {% endif %}
      - conditions:
          bgp-conditions:
            match-community-set:
              community-set: generic-reject
        actions:
            route-disposition: reject-route
{% endfor %}

-------------

defined-sets:
  prefix-sets:
    - prefix-set-name: generic-martians
      prefix-list:
{{      write_prefixset_list(bogons) }}
{% for as_set_bundle_id in irrdb_info|sort %}
{%    set as_set_bundle = irrdb_info[as_set_bundle_id] %}
{%    if as_set_bundle.prefixes|length == 0 %}
      # no prefixes found for {{ as_set_bundle.name }}
{%    else %}
    - prefix-set-name: "AS-SET-{{ as_set_bundle.name }}_PREFIXES"
      prefix-list:
{{ write_prefix_list(as_set_bundle.prefixes, True) }}
{%    endif %}
{% endfor %}

  bgp-defined-sets:
    as-path-sets:
{% for as_set_bundle_id in irrdb_info|sort %}
{%    set as_set_bundle = irrdb_info[as_set_bundle_id] %}
      # {{ as_set_bundle.descr }}, used_by {{ as_set_bundle.used_by|sort|join(", ") }}
{%    if as_set_bundle.asns|length == 0 %}
      # no origin ASNs found for {{ as_set_bundle.name }}
{%    else %}
      - as-path-set-name: "AS-SET-{{ as_set_bundle.name }}_ASNs"
        as-path-list: {{ as_set_bundle.asns|sort }}
{% endif %}
{% endfor %}

  {% if get_communities("std").items()|length > 0 %}
  community-sets:
  {% for (name, community) in get_communities("std").items() %}
  {{ write_community("community", name, community, clients=clients)|indent(2, False) }}
  {% endfor %}
  {% endif -%}

  {% if get_communities("lrg").items()|length > 0 %}
  large-community-sets:
  {% for (name, community) in get_communities("lrg").items() %}
  {{ write_community("large-community", name, community, clients=clients)|indent(2, False) }}
  {% endfor %}
  {% endif -%}


  {% if get_communities("ext").items()|length > 0 %}
  extended-community-sets:
  {% for (name, community) in get_communities("ext").items() %}
  {{ write_community("extended-community", name, community, clients=clients)|indent(2, False) }}
  {% endfor %}
  {% endif -%}