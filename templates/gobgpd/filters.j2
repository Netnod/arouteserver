{% from 'macros.j2' import write_prefix_list %}
{% from 'macros.j2' import write_prefix_list_entry %}
{% from 'macros.j2' import write_prefixset_list %}
{% from 'macros.j2' import write_community %}
{% from 'macros.j2' import as_path_match %}
{% from 'macros.j2' import write_aspath_list %}
{% from 'macros.j2' import generic_communities %}

# ---------------------------------------------------------
# FILTERS

policy-definitions:
  - name: default-export
    statements:
      - name: Reject export-bogons-IPV4
        conditions:
          match-prefix-set:
            prefix-set: "generic-bogons-IPV4"
            match-set-options: "any"
        actions:
          route-disposition : "reject-route"
      - name: Reject export-bogons-IPV6
        conditions:
          match-prefix-set:
            prefix-set: "generic-bogons-IPV6"
            match-set-options: "any"
        actions:
          route-disposition : "reject-route"

  - name: default-import
    statements:
      - name: Reject import-bogons-IPV4
        conditions:
          match-prefix-set:
            prefix-set: "generic-bogons-IPV4"
            match-set-options: "any"
        actions:
          route-disposition : "reject-route"
      - name: Reject import-bogons-IPV6
        conditions:
          match-prefix-set:
            prefix-set: "generic-bogons-IPV6"
            match-set-options: "any"
        actions:
          route-disposition : "reject-route"

{% for asn in clients|map(attribute='asn')|unique|list %}
{% set client = get_client_from_asn(asn) %}
  - name: as{{ asn }}-import
    statements:
      - name: Reject if ASPath not in IRRDB-ASSet-{{asn}}
        conditions:
          bgp-conditions:
            match-as-path-set:
              as-path-set: "IRRDB-ASSet-{{asn}}"
              match-set-options: "invert"
        actions:
          route-disposition: "reject-route"

      - name: Allow only {{asn}} as first ASN
        conditions:
          bgp-conditions:
            match-as-path-set:
              as-path-set: "AS{{ asn }}-first"
              match-set-options: invert
        actions:
          route-disposition: "reject-route"

      ## Communities
      {% macro import_communities() %}{% include "import-communities.j2" %}{% endmacro %}
      {{ import_communities()|indent(6) }}

  - name: as{{ asn }}-export
    statements:
      {% macro export_communities() %}{% include "export-communities.j2" %}{% endmacro %}
      {{ export_communities()|indent(6) }}

  - name: as{{ asn }}-ipv4-import
    statements:
      - name: Reject IPV4 PREFIXES not belonging to AS{{asn}}
        conditions:
          match-prefix-set:
            prefix-set: "AS{{asn}}_IPV4_PREFIXES"
            match-set-options: "invert"
        actions:
          route-disposition: "reject-route"

  - name: as{{ asn }}-ipv6-import
    statements:
      - name: Reject IPV6 PREFIXES not belonging to AS{{asn}}
        conditions:
          match-prefix-set:
            prefix-set: "AS{{asn}}_IPV6_PREFIXES"
            match-set-options: "invert"
        actions:
          route-disposition: "reject-route"

{% endfor %}

defined-sets:
{#
------------------------------------------
  Prefix sets
------------------------------------------
#}
  prefix-sets:
    - prefix-set-name: "generic-bogons-IPV4"
      prefix-list:
      {{write_prefixset_list(bogons,4)|indent(6,false)}}
    - prefix-set-name: "generic-bogons-IPV6"
      prefix-list:
      {{write_prefixset_list(bogons,6)|indent(6,false)}}


{% for asn in clients|map(attribute='asn')|unique|list %}
{%    set client = get_client_from_asn(asn) %}
    - prefix-set-name: "AS{{asn}}_IPV4_PREFIXES"
      prefix-list:
{%    for as_set_bundle_id in client.cfg.filtering.irrdb.as_set_bundle_ids|sort %}
{%      set as_set_bundle = irrdb_info[as_set_bundle_id] %}
      {{ write_prefixset_list(as_set_bundle.prefixes, 4)|indent(6, False) }}
{%    endfor %}

    - prefix-set-name: "AS{{asn}}_IPV6_PREFIXES"
      prefix-list:
{%    for as_set_bundle_id in client.cfg.filtering.irrdb.as_set_bundle_ids|sort %}
{%      set as_set_bundle = irrdb_info[as_set_bundle_id] %}
      {{ write_prefixset_list(as_set_bundle.prefixes, 6)|indent(6, False) }}
{%    endfor %}
{% endfor %}

{#
------------------------------------------
  BGP Sets
------------------------------------------
#}
  bgp-defined-sets:
  {#
  ------------------------------------------
    AS-Paths Sets
  ------------------------------------------
  #}
    as-path-sets:
{% for asn in clients|map(attribute='asn')|unique|list %}
{%    set client = get_client_from_asn(asn) %}
      - as-path-set-name: "AS{{asn}}-first"
        as-path-list: ["^{{asn}}"]

      - as-path-set-name: "IRRDB-ASSet-{{asn}}"
        as-path-list:
{%    for as_set_bundle_id in client.cfg.filtering.irrdb.as_set_bundle_ids|sort %}
{%      set as_set_bundle = irrdb_info[as_set_bundle_id] %}
{%      if as_set_bundle.asns|length > 0 %}
        # {{as_set_bundle.name }}
        {{ write_aspath_list(as_set_bundle.asns|sort)|indent(8, False) -}}
{%      endif %}
{%    endfor %}
{%- endfor %}

{#
------------------------------------------
  Standard community lists
------------------------------------------
#}
  {% if get_communities("std").items()|length > 0 %}
    community-sets:
  {% for (name, community) in get_communities("std").items() %}
    {{ write_community("community", name, community, clients=clients)|indent(4, False) }}
  {%- endfor %}
  {% endif -%}
{#
------------------------------------------
  Large community lists
------------------------------------------
#}
  {% if get_communities("lrg").items()|length > 0 %}
    large-community-sets:
  {% for (name, community) in get_communities("lrg").items() %}
    {{ write_community("large-community", name, community, clients=clients)|indent(4, False) }}
  {%- endfor %}
  {% endif -%}

{#
------------------------------------------
  Extended community lists
------------------------------------------
#}
  {% if get_communities("ext").items()|length > 0 %}
    ext-community-sets:
  {% for (name, community) in get_communities("ext").items() %}
    {{ write_community("ext-community", name, community, clients=clients)|indent(4, False) }}
  {%- endfor %}
  {% endif -%}
